name: LLM Sidecar Smoke Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  smoke-test:
    runs-on: ubuntu-latest
    env:
      TORCH_VERSION: "2.2.2+cu121"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-torch-${{ env.TORCH_VERSION }}

      - name: Osiris Setup
        uses: ./.github/actions/osiris-setup
        with:
          # python-version: '3.11' # Default, or specify if a particular version is needed for any scripts
          install-requirements: 'false' # Assuming this job doesn't run python setup directly
          system-packages: 'jq docker-compose' # jq is explicitly installed here

      - name: Copy .env template
        run: cp .env.template .env

      - name: Start services
        run: |
          docker compose -f docker/compose.yaml up -d

      - name: Wait for services to be running
        run: |
          echo "Waiting for llm-sidecar and vram-watchdog services to be running..."
          MAX_RETRIES=18 # 18 retries * 10 seconds = 180 seconds
          RETRY_COUNT=0
          # Services expected to be running
          EXPECTED_SERVICES=("llm-sidecar" "vram-watchdog")
          ALL_RUNNING=false

          until [ $RETRY_COUNT -ge $MAX_RETRIES ]; do
            RUNNING_SERVICES=$(docker compose -f docker/compose.yaml ps --services --filter "status=running")

            MISSING_SERVICES_COUNT=0
            for SERVICE_NAME in "${EXPECTED_SERVICES[@]}"; do
              if ! echo "${RUNNING_SERVICES}" | grep -Eq "^${SERVICE_NAME}$"; then
                MISSING_SERVICES_COUNT=$((MISSING_SERVICES_COUNT + 1))
                echo "$SERVICE_NAME is not yet running."
              fi
            done

            if [ "$MISSING_SERVICES_COUNT" -eq 0 ]; then
              ALL_RUNNING=true
              echo "All expected services (llm-sidecar, vram-watchdog) are running."
              break
            fi

            RETRY_COUNT=$((RETRY_COUNT + 1))
            FORMATTED_RUNNING_SERVICES=$(echo "${RUNNING_SERVICES}" | tr '\n' ' ' | sed 's/ $//')
            echo "Waiting for services... Attempt $RETRY_COUNT/$MAX_RETRIES. Currently running: [${FORMATTED_RUNNING_SERVICES:-none}]"
            sleep 10
          done

          if [ "$ALL_RUNNING" = "false" ]; then
            echo "Not all expected services started within 180 seconds."
            exit 1
          fi

      - name: Dump service logs on failure
        if: failure()
        run: |
          echo "One or more steps failed. Dumping service logs..."
          docker ps -a
          echo "---- llm-sidecar logs ----"
          docker compose -f docker/compose.yaml logs llm-sidecar > llm-sidecar-logs.txt || echo "llm-sidecar logs not available" > llm-sidecar-logs.txt
          echo "---- vram-watchdog logs ----"
          docker compose -f docker/compose.yaml logs vram-watchdog > vram-watchdog-logs.txt || echo "vram-watchdog logs not available" > vram-watchdog-logs.txt

      - name: Upload service logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: service-logs-llm-sidecar-smoke-test
          path: |
            llm-sidecar-logs.txt
            vram-watchdog-logs.txt
          if-no-files-found: ignore
          retention-days: 7

      - name: Tear down services
        if: always() # Ensure cleanup even if previous steps fail
        run: |
          echo "Tearing down services..."
          docker compose -f docker/compose.yaml down --remove-orphans
